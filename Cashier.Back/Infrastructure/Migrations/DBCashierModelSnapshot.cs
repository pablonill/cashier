// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(DBCashier))]
    partial class DBCashierModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CardId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountNumber = "998338874777678833244",
                            Balance = 100000m,
                            CardId = 1,
                            CreatedAt = new DateTime(2023, 2, 22, 19, 23, 12, 877, DateTimeKind.Local).AddTicks(8510)
                        },
                        new
                        {
                            Id = 2,
                            AccountNumber = "458334864777678833244",
                            Balance = 100000m,
                            CardId = 2,
                            CreatedAt = new DateTime(2023, 2, 22, 19, 23, 12, 877, DateTimeKind.Local).AddTicks(8522)
                        });
                });

            modelBuilder.Entity("Domain.Entities.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FailedAttempts")
                        .HasColumnType("int");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<int>("PinNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Cards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CardNumber = "7777333399995555",
                            CreatedAt = new DateTime(2023, 2, 22, 19, 23, 12, 877, DateTimeKind.Local).AddTicks(8458),
                            ExpirationDate = new DateTime(2023, 5, 22, 22, 23, 12, 877, DateTimeKind.Utc).AddTicks(8472),
                            FailedAttempts = 0,
                            IsLocked = false,
                            PinNumber = 1234
                        },
                        new
                        {
                            Id = 2,
                            CardNumber = "8888333399995555",
                            CreatedAt = new DateTime(2023, 2, 22, 19, 23, 12, 877, DateTimeKind.Local).AddTicks(8497),
                            ExpirationDate = new DateTime(2023, 3, 22, 22, 23, 12, 877, DateTimeKind.Utc).AddTicks(8498),
                            FailedAttempts = 0,
                            IsLocked = false,
                            PinNumber = 4444
                        });
                });

            modelBuilder.Entity("Domain.Entities.Log", b =>
                {
                    b.Property<int>("OperationNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OperationNumber"));

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CardId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OperationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OperationType")
                        .HasColumnType("int");

                    b.HasKey("OperationNumber");

                    b.HasIndex("CardId");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("Domain.Entities.Account", b =>
                {
                    b.HasOne("Domain.Entities.Card", "Card")
                        .WithMany()
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");
                });

            modelBuilder.Entity("Domain.Entities.Log", b =>
                {
                    b.HasOne("Domain.Entities.Card", "Card")
                        .WithMany()
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");
                });
#pragma warning restore 612, 618
        }
    }
}
